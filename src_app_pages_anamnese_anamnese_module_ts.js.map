{"version":3,"file":"src_app_pages_anamnese_anamnese_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACD;AAEP;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;QACvB,WAAW,EAAC,CAAC,gEAAS,CAAC;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AClBG;AACM;AACmB;AAErB;AAEyB;AAEvB;IAYlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAV9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACpBqC;AACR;AACnB;AACS;IAOrC,YAAY,SAAZ,YAAY;IAEvB,YACU,MAAc,EACd,OAAoB;QADpB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAa;IAC1B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,GAAG,IAAI,qDAAS,CAAC;YACxB,IAAI,EAAE,IAAI,uDAAW,CAAC,IAAI,EAAC,CAAC,+DAAmB,CAAC,CAAC;SAClD,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;QAC5B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;YAC9C,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC;IAEJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IACxD,CAAC;CAGF;;YAvCQ,mDAAM;YADN,+DAAW;;AASP,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,kLAAmC;;KAEpC,CAAC;GACW,YAAY,CA+BxB;AA/BwB;;;;;;;;;;;;;;;ACVzB,iEAAe,6rBAA6rB,8YAA8Y","sources":["./src/app/pages/anamnese/anamnese-routing.module.ts","./src/app/pages/anamnese/anamnese.module.ts","./src/app/pages/anamnese/anamnese.page.ts","./src/app/pages/anamnese/anamnese.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\n\nimport { AnamnesePage } from './anamnese.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AnamnesePage,\n    canActivate:[AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AnamnesePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AnamnesePageRoutingModule } from './anamnese-routing.module';\n\nimport { AnamnesePage } from './anamnese.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AnamnesePageRoutingModule\n  ],\n  declarations: [AnamnesePage]\n})\nexport class AnamnesePageModule {}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UserService } from './../../services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-anamnese',\r\n  templateUrl: './anamnese.page.html',\r\n  styleUrls: ['./anamnese.page.scss'],\r\n})\r\nexport class AnamnesePage implements OnInit {\r\n  form!: FormGroup\r\n  constructor(\r\n    private router: Router,\r\n    private userSrv: UserService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.initialForm()\r\n  }\r\n\r\n  initialForm(){\r\n    this.form = new FormGroup({\r\n      peso: new FormControl(null,[Validators.required])\r\n    })\r\n  }\r\n\r\n  submitWeigth(){\r\n    let weight = this.form.value\r\n    this.userSrv.insertWeight(weight).subscribe(()=>{\r\n      this.updateWeight();\r\n      this.router.navigate(['altura'])\r\n    })\r\n    \r\n  }\r\n\r\n  updateWeight(){\r\n    this.userSrv.setObservableWeight(this.form.value.peso)\r\n  }\r\n  \r\n\r\n}\r\n","export default \"\\r\\n  <ion-content class=\\\"ion-padding\\\">\\r\\n    \\r\\n    <div class=\\\"name\\\">\\r\\n      <ion-label class=\\\"head_lbl\\\">Você é único para nós</ion-label>\\r\\n      <ion-label class=\\\"sub_lbl\\\">\\r\\n        Para montarmos um plano personalizado de acordo com os seus objtivos precisamos saber um pouco mais sobre você, tudo bem ? \\r\\n      </ion-label>\\r\\n    </div>\\r\\n  <br><br>\\r\\n  <form [formGroup]=\\\"form\\\">    \\r\\n  <ion-card class=\\\"efeito-vidro\\\">\\r\\n      <ion-card-header>\\r\\n        <ion-card-subtitle></ion-card-subtitle>\\r\\n        <ion-card-title>Qual o seu peso atual?</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content> \\r\\n        <ion-input style=\\\"margin-left:20% ;\\\" type=\\\"number\\\" placeholder=\\\"Informe seu peso em kg\\\" formControlName=\\\"peso\\\"></ion-input>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </form>\\r\\n  </ion-content>\\r\\n\\r\\n  <ion-footer>\\r\\n    <ion-toolbar>\\r\\n        <ion-button (click)=\\\"submitWeigth()\\\" expand=\\\"block\\\" shape=\\\"round\\\">\\r\\n          Continuar \\r\\n        </ion-button>\\r\\n    </ion-toolbar>\\r\\n  </ion-footer>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}
{"version":3,"file":"src_app_pages_exams_exams_module_ts.js","mappings":"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","sources":["./src/app/pages/exams/exams-routing.module.ts","./src/app/pages/exams/exams.module.ts","./src/app/pages/exams/exams.page.ts","./src/app/pages/exams/exams.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExamsPage } from './exams.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExamsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExamsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExamsPageRoutingModule } from './exams-routing.module';\n\nimport { ExamsPage } from './exams.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ExamsPageRoutingModule\n  ],\n  declarations: [ExamsPage]\n})\nexport class ExamsPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormControl,\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { NavController, ToastController } from \"@ionic/angular\";\nimport { ExamsService } from \"src/app/services/exams.service\";\nimport { UserService } from \"./../../services/user.service\";\n\n@Component({\n  selector: \"app-exams\",\n  templateUrl: \"./exams.page.html\",\n  styleUrls: [\"./exams.page.scss\"],\n})\nexport class ExamsPage implements OnInit {\n  form: FormGroup;\n  campos: any[];\n  id: number;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private navCtrl: NavController,\n    private examSrv: ExamsService,\n    private userSrv: UserService,\n    private formBuilder: FormBuilder,\n    private toastCtrl: ToastController\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.subscribe((data) => {\n      this.id = data.grupo_id;\n      this.loadGroupExam();\n      this.initialFormLogin();\n    });\n  }\n\n  goToExamsTwo() {\n    this.router.navigate([\"exams2\"]);\n  }\n\n  initialFormLogin() {\n    this.form = this.formBuilder.group({\n      mes: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  loadGroupExam() {\n    this.examSrv.getGroupExam(this.id).subscribe((data) => {\n      this.campos = data;\n      this.buildForm();\n      console.log(data);\n    });\n  }\n\n  buildForm() {\n    const formControls = {\n      mes: [\"\", [Validators.required]],\n    };\n\n    this.campos.forEach((campo) => {\n      formControls[campo.desc] = [\"\", [Validators.required]];\n    });\n\n    this.form = this.formBuilder.group(formControls);\n  }\n\n  async submit() {\n    if (this.form.valid) {\n      this.form.value.id = this.id;\n      const dados = this.form.value;\n      this.userSrv.insertExameUser(dados).subscribe(\n        async () => {\n          await this.showToast(\"Exame Inserido com Sucesso\");\n          this.router.navigate([\"menu-exames\"]);\n        },\n        async (error) => {\n          await this.showToast(error);\n        }\n      );\n    }\n  }\n\n  backTo() {\n    this.navCtrl.back();\n  }\n\n  async showToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      duration: 500,\n    });\n\n    await toast.present();\n  }\n}\n","export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"backTo()\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"chevron-back\\\" color=\\\"light\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Exames</ion-title>\\n\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <h6 style=\\\"font-weight: bold; text-align:center; font-size:13px\\\">Você é unico para nós !!</h6>\\n  <h6 style=\\\" text-align:center; font-size:12px\\\">Para fazermos um acompanhamento personalizado precisamos que informe os dados dos seus exames. </h6>\\n\\n  <form [formGroup]=\\\"form\\\"><br>\\n     <ion-item>\\n      <ion-label>Mês</ion-label>\\n      <ion-select formControlName=\\\"mes\\\">\\n        <ion-select-option value=\\\"1\\\">Janeiro</ion-select-option>\\n        <ion-select-option value=\\\"2\\\">Fevereiro</ion-select-option>\\n        <ion-select-option value=\\\"3\\\">Março</ion-select-option>\\n        <ion-select-option value=\\\"4\\\">Abril</ion-select-option>\\n        <ion-select-option value=\\\"5\\\">Maio</ion-select-option>\\n        <ion-select-option value=\\\"6\\\">Junho</ion-select-option>\\n        <ion-select-option value=\\\"7\\\">Julho</ion-select-option>\\n        <ion-select-option value=\\\"8\\\">Agosto</ion-select-option>\\n        <ion-select-option value=\\\"9\\\">Setembro</ion-select-option>\\n        <ion-select-option value=\\\"10\\\">Outubro</ion-select-option>\\n        <ion-select-option value=\\\"11\\\">Novembro</ion-select-option>\\n        <ion-select-option value=\\\"12\\\">Dezembro</ion-select-option>\\n      </ion-select>\\n    </ion-item> \\n  \\n    <ion-item *ngFor=\\\"let campo of campos\\\">\\n      <ion-label position=\\\"floating\\\">{{campo.desc}}:</ion-label>\\n      <ion-input type=\\\"text\\\" [formControlName]=\\\"campo.desc\\\" [placeholder]=\\\"'Informe a sua ' + campo.desc\\\"> </ion-input>\\n    </ion-item>\\n    <!-- <ion-item>\\n      <ion-label position=\\\"floating\\\">Insulina:</ion-label>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Informe a sua Insulina\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Homa-ir:</ion-label>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Informe o seu índice de Homa-ir\\\"></ion-input>\\n    </ion-item> -->\\n    \\n    <!-- <ion-item>\\n      <ion-label position=\\\"floating\\\">Testosterona Total</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">IGF1</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">S-DHEA</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Cortisol</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">CPK</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Colesterol Total</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Colesterol Total</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">LDL</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Triglicerides</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Homocisteina </ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">TGO</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">TGP</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Vitamina B12</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Ferritina</ion-label>\\n      <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item> -->\\n   \\n  </form>\\n</ion-content>\\n<ion-footer (click)=\\\"submit()\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title style=\\\"text-align: center;\\\">Enviar</ion-title>\\n\\n  </ion-toolbar>\\n</ion-footer>\";"],"names":[],"sourceRoot":"webpack:///"}